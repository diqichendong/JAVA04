/*
 * Panel vista uno a uno
 */
package vista;

import controlador.*;
import java.io.IOException;
import java.time.ZoneId;
import java.util.Collections;
import java.util.GregorianCalendar;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import modelo.*;

/**
 *
 * @author Di Qi
 */
public class PanelUnoAUno extends javax.swing.JPanel {

    private App app;
    private MyList<Empleado> lista;

    private final int N_MASIVO = 20_000;

    private boolean modoCrear;

    /**
     * Creates new form PanelUnoAUno
     */
    public PanelUnoAUno(App app, MyList<Empleado> lista) {
        initComponents();

        this.app = app;
        this.lista = lista;

        this.modoCrear = false;
    }

    /**
     * Actualiza en la vista el empleado actual
     */
    public void actualizarVista() {
        Empleado e = this.lista.getActualNode().getMain();

        if (e instanceof Programador) {
            Programador p = (Programador) e;
            cbTipo.setSelectedIndex(0);
            cbTipoItemStateChanged(null);
            txtNumero.setText(p.getNumero() + "");
            txtNombre.setText(p.getNombre());
            txtSueldo.setText(p.getSueldo() + "");
            txtSueldoMaximo.setText(p.getSueldoMaximo() + "");
            dpFechaAlta.setDate(p.getFechaAlta().getTime().toInstant().atZone(ZoneId.systemDefault()).toLocalDate());
            txtVariable1.setText(p.getSueldoExtraMensual() + "");
            txtVariable2.setText(p.getAnyiosExperiencia() + "");
        } else if (e instanceof Analista) {
            Analista a = (Analista) e;
            cbTipo.setSelectedIndex(1);
            txtNumero.setText(a.getNumero() + "");
            txtNombre.setText(a.getNombre());
            txtSueldo.setText(a.getSueldo() + "");
            txtSueldoMaximo.setText(a.getSueldoMaximo() + "");
            dpFechaAlta.setDate(a.getFechaAlta().getTime().toInstant().atZone(ZoneId.systemDefault()).toLocalDate());
            txtVariable1.setText(a.getPlusAnual() + "");
            txtVariable2.setText(a.getProyectoActual());
        }

        actualizarBotones();
    }

    /**
     * Actualizar estado de los botones
     */
    private void actualizarBotones() {

        // Botones anterior y primero
        boolean estado = this.lista.getActualNode().isFirstNode();
        btnAnterior.setEnabled(!estado);
        btnPrimero.setEnabled(!estado);

        // Botones siguiente y último
        estado = this.lista.getActualNode().isLastNode();
        btnSiguiente.setEnabled(!estado);
        btnUltimo.setEnabled(!estado);

        // Botón calcular
        Empleado e = this.lista.getActualNode().getMain();
        if (e instanceof Programador) {
            Programador p = (Programador) e;
            btnCalcular.setEnabled(p.cumpleMes());
        } else if (e instanceof Analista) {
            Analista a = (Analista) e;
            btnCalcular.setEnabled(a.cumpleAnyo());
        }
    }

    /**
     * Activar o desactivar el modo crear
     *
     * @param opcion true activar, false desactivar
     */
    private void activarModoCrear(boolean opcion) {
        this.modoCrear = opcion;

        if (opcion) {
            cbTipo.setSelectedIndex(0);
            txtNumero.setText("");
            txtNombre.setText("");
            txtSueldo.setText("");
            txtSueldoMaximo.setText("");
            dpFechaAlta.setDateToToday();
            txtVariable1.setText("");
            txtVariable2.setText("");

            btnVariable1.setText("Aceptar");
            btnVariable2.setText("Cancelar");
        } else {
            btnVariable1.setText("Guardar");
            btnVariable2.setText("Cargar");
        }

        btnAnterior.setEnabled(!opcion);
        btnPrimero.setEnabled(!opcion);
        btnUltimo.setEnabled(!opcion);
        btnSiguiente.setEnabled(!opcion);
        btnCrear.setEnabled(!opcion);
        btnCMasivo.setEnabled(!opcion);
        btnOrdenar.setEnabled(!opcion);
        btnCalcular.setEnabled(!opcion);

        cbTipo.setEnabled(opcion);
        txtNumero.setEditable(opcion);
        txtNombre.setEditable(opcion);
        txtSueldo.setEditable(opcion);
        txtSueldoMaximo.setEditable(opcion);
        dpFechaAlta.setEnabled(opcion);
        txtVariable1.setEditable(opcion);
        txtVariable2.setEditable(opcion);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnVolver = new javax.swing.JButton();
        btnCrear = new javax.swing.JButton();
        btnCMasivo = new javax.swing.JButton();
        btnOrdenar = new javax.swing.JButton();
        btnCalcular = new javax.swing.JButton();
        btnVariable1 = new javax.swing.JButton();
        btnVariable2 = new javax.swing.JButton();
        btnSiguiente = new javax.swing.JButton();
        btnPrimero = new javax.swing.JButton();
        btnUltimo = new javax.swing.JButton();
        btnAnterior = new javax.swing.JButton();
        lblTipo = new javax.swing.JLabel();
        lblNumero = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        lblSueldo = new javax.swing.JLabel();
        lblSueldoMaximo = new javax.swing.JLabel();
        lblFechaAlta = new javax.swing.JLabel();
        lblVariable1 = new javax.swing.JLabel();
        lblVariable2 = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtSueldo = new javax.swing.JTextField();
        txtSueldoMaximo = new javax.swing.JTextField();
        txtVariable1 = new javax.swing.JTextField();
        txtVariable2 = new javax.swing.JTextField();
        dpFechaAlta = new com.github.lgooddatepicker.components.DatePicker();
        cbTipo = new javax.swing.JComboBox<>();

        btnVolver.setText("<  Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        btnCrear.setText("Crear");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });

        btnCMasivo.setText("C. Masivo");
        btnCMasivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCMasivoActionPerformed(evt);
            }
        });

        btnOrdenar.setText("Ordenar");
        btnOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenarActionPerformed(evt);
            }
        });

        btnCalcular.setText("Calcular");
        btnCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularActionPerformed(evt);
            }
        });

        btnVariable1.setText("Guardar");
        btnVariable1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVariable1ActionPerformed(evt);
            }
        });

        btnVariable2.setText("Cargar");
        btnVariable2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVariable2ActionPerformed(evt);
            }
        });

        btnSiguiente.setText("Siguiente");
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });

        btnPrimero.setText("Primero");
        btnPrimero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrimeroActionPerformed(evt);
            }
        });

        btnUltimo.setText("Último");
        btnUltimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUltimoActionPerformed(evt);
            }
        });

        btnAnterior.setText("Anterior");
        btnAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnteriorActionPerformed(evt);
            }
        });

        lblTipo.setText("Tipo");

        lblNumero.setText("Número:");

        lblNombre.setText("Nombre:");

        lblSueldo.setText("Sueldo:");

        lblSueldoMaximo.setText("Sueldo máximo:");

        lblFechaAlta.setText("Fecha alta:");

        lblVariable1.setText("**Variable**");

        lblVariable2.setText("**Variable**");

        txtNumero.setEditable(false);

        txtNombre.setEditable(false);

        txtSueldo.setEditable(false);

        txtSueldoMaximo.setEditable(false);

        txtVariable1.setEditable(false);

        txtVariable2.setEditable(false);

        dpFechaAlta.setEnabled(false);

        cbTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Programador", "Analista" }));
        cbTipo.setEnabled(false);
        cbTipo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbTipoItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnVolver)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblNombre)
                    .addComponent(lblNumero)
                    .addComponent(lblSueldo)
                    .addComponent(lblSueldoMaximo)
                    .addComponent(lblFechaAlta)
                    .addComponent(lblVariable1)
                    .addComponent(lblVariable2)
                    .addComponent(lblTipo))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtVariable1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNumero, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNombre, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSueldo, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSueldoMaximo, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dpFechaAlta, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtVariable2)
                    .addComponent(cbTipo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(76, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnCrear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnPrimero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCMasivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(btnVariable1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnOrdenar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnUltimo, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnSiguiente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(btnVariable2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(58, 58, 58))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnVolver))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTipo)
                            .addComponent(cbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNumero)
                            .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNombre)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSueldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSueldo))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSueldoMaximo)
                            .addComponent(txtSueldoMaximo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFechaAlta)
                            .addComponent(dpFechaAlta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblVariable1)
                            .addComponent(txtVariable1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblVariable2)
                            .addComponent(txtVariable2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAnterior)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSiguiente)
                        .addComponent(btnPrimero)
                        .addComponent(btnUltimo)))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCrear)
                    .addComponent(btnCMasivo)
                    .addComponent(btnOrdenar)
                    .addComponent(btnCalcular))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVariable2)
                    .addComponent(btnVariable1))
                .addContainerGap(79, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        this.app.getPanelLista().actualizarLista();
        this.app.setPanelLista();
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnteriorActionPerformed
        this.lista.prev();
        actualizarVista();
    }//GEN-LAST:event_btnAnteriorActionPerformed

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed
        this.lista.next();
        actualizarVista();
    }//GEN-LAST:event_btnSiguienteActionPerformed

    private void btnPrimeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrimeroActionPerformed
        this.lista.setActualNode(this.lista.getFirstNode());
        actualizarVista();
    }//GEN-LAST:event_btnPrimeroActionPerformed

    private void btnUltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUltimoActionPerformed
        this.lista.setActualNode(this.lista.getLastNode());
        actualizarVista();
    }//GEN-LAST:event_btnUltimoActionPerformed

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
        activarModoCrear(true);
    }//GEN-LAST:event_btnCrearActionPerformed

    private void btnVariable1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVariable1ActionPerformed
        if (modoCrear) {    // Aceptar
            boolean datosCorrectos = true;
            int numero = 0;
            String nombre;
            double sueldo, sueldoMaximo;
            GregorianCalendar fechaAlta;

            try {
                numero = Integer.parseInt(txtNumero.getText());
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "El número no es correcto.");
                datosCorrectos = false;
            }

            try {
                sueldo = Double.parseDouble(txtSueldo.getText());
                if (sueldo < 0) {
                    throw new Exception();
                }
            } catch (Exception ex) {
                sueldo = 0;
            }

            try {
                sueldoMaximo = Double.parseDouble(txtSueldoMaximo.getText());
                if (sueldoMaximo < 0) {
                    throw new Exception();
                }
            } catch (Exception ex) {
                sueldoMaximo = 0;
            }

            fechaAlta = GregorianCalendar.from(dpFechaAlta.getDate().atStartOfDay(ZoneId.systemDefault()));

            if (txtNombre.getText().isBlank()) {
                nombre = "**Anónimo**";
            } else {
                nombre = txtNombre.getText();
            }

            if (cbTipo.getSelectedIndex() == 0) {   // Programador
                double sueldoExtraMensual;
                int anyosExperiencia;

                try {
                    sueldoExtraMensual = Double.parseDouble(txtVariable1.getText());
                    if (sueldoExtraMensual < 0) {
                        throw new Exception();
                    }
                } catch (Exception ex) {
                    sueldoExtraMensual = 0;
                }

                try {
                    anyosExperiencia = Integer.parseInt(txtVariable2.getText());
                    if (anyosExperiencia < 0) {
                        throw new Exception();
                    }
                } catch (Exception ex) {
                    anyosExperiencia = 0;
                }

                if (datosCorrectos) {
                    try {
                        Programador p = new Programador(sueldoExtraMensual, anyosExperiencia, numero, nombre, sueldo, sueldoMaximo, fechaAlta);
                        this.lista.add(p);
                        this.lista.getLastNode().setIndex(p.getNumero());
                    } catch (SueldoException ex) {
                        JOptionPane.showMessageDialog(this, ex.getMessage());
                    }
                    actualizarVista();
                    activarModoCrear(false);
                }
            } else {
                double plusAnual;
                String proyectoActual;

                try {
                    plusAnual = Double.parseDouble(txtVariable1.getText());
                    if (plusAnual < 0) {
                        throw new Exception();
                    }
                } catch (Exception ex) {
                    plusAnual = 0;
                }

                if (txtVariable2.getText().isBlank()) {
                    proyectoActual = "Sin proyecto";
                } else {
                    proyectoActual = txtVariable2.getText();
                }

                if (datosCorrectos) {
                    try {
                        Analista a = new Analista(plusAnual, proyectoActual, numero, nombre, sueldo, sueldoMaximo, fechaAlta);
                        this.lista.add(a);
                        this.lista.getLastNode().setIndex(a.getNumero());
                    } catch (SueldoException ex) {
                        JOptionPane.showMessageDialog(this, ex.getMessage());
                    }
                    actualizarVista();
                    activarModoCrear(false);
                }
            }
        } else {    // Guardar
            try {
                JFileChooser fc = new JFileChooser();
                fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
                if (fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
                    this.lista.save(fc.getSelectedFile());
                } else {
                    JOptionPane.showMessageDialog(this, "Fallo en la elección de directorio.");
                }
                JOptionPane.showMessageDialog(this, "La lista se ha guardado correctamente.");
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "No se ha podido guardar la lista.");
            }
        }
    }//GEN-LAST:event_btnVariable1ActionPerformed

    private void cbTipoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbTipoItemStateChanged
        if (cbTipo.getSelectedIndex() == 0) {
            lblVariable1.setText("Sueldo extra mensual:");
            lblVariable2.setText("Años de experiencia:");
        } else {
            lblVariable1.setText("Plus anual:");
            lblVariable2.setText("Proyecto actual:");
        }
    }//GEN-LAST:event_cbTipoItemStateChanged

    private void btnVariable2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVariable2ActionPerformed
        if (modoCrear) {    // Cancelar
            actualizarVista();
            activarModoCrear(false);
        } else {    // Cargar
            try {
                JFileChooser fc = new JFileChooser();
                fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
                if (fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
                    List<Empleado> aux = this.lista.load(fc.getSelectedFile());
                    for(Empleado e : aux) {
                        this.lista.add(e);
                        this.lista.getLastNode().setIndex(e.getNumero());
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Fallo en la elección de fichero.");
                }
                actualizarVista();
                JOptionPane.showMessageDialog(this, "Se han cargado los empleados correctamente en la lista.");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "No se ha podido cargar los empleados del fichero.");
            }
        }
    }//GEN-LAST:event_btnVariable2ActionPerformed

    private void btnCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularActionPerformed
        Empleado e = this.lista.getActualNode().getMain();

        if (e instanceof Programador) {
            Programador p = (Programador) e;
            if (p.cumpleMes()) {
                double nuevoSueldo = p.getSueldo() + p.getSueldoExtraMensual();
                try {
                    p.setSueldo(nuevoSueldo);
                    actualizarVista();
                } catch (SueldoException ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                }
            }
        } else if (e instanceof Analista) {
            Analista a = (Analista) e;
            if (a.cumpleAnyo()) {
                double nuevoSueldo = a.getSueldo() * (1.0 + a.getPlusAnual() / 100);
                try {
                    a.setSueldo(nuevoSueldo);
                    actualizarVista();
                } catch (SueldoException ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                }
            }
        }
    }//GEN-LAST:event_btnCalcularActionPerformed

    private void btnCMasivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCMasivoActionPerformed
        for (int i = 0; i < N_MASIVO; i++) {
            try {
                Empleado e = Funciones.generarEmpleadoAleatorio(Funciones.numeroRandom(2001, 1000000));
                this.lista.add(e);
                this.lista.getLastNode().setIndex(e.getNumero());
            } catch (SueldoException ex) {
                JOptionPane.showConfirmDialog(this, ex.getMessage());
            }
        }

        for (int i = 0; i < 20; i++) {
            try {
                Empleado e = Funciones.generarEmpleadoAleatorio(Funciones.numeroRandom(1, 2000));
                this.lista.add(e);
                this.lista.getLastNode().setIndex(e.getNumero());
            } catch (SueldoException ex) {
                JOptionPane.showConfirmDialog(this, ex.getMessage());
            }
        }

        actualizarVista();
        JOptionPane.showMessageDialog(this, "Se han creado los empleados correctamente.");
    }//GEN-LAST:event_btnCMasivoActionPerformed

    private void btnOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenarActionPerformed
        List<Empleado> listaAux = this.lista.getList();
        long tiempoInicioCollection = System.currentTimeMillis();
        Collections.sort(listaAux);
        long tiempoCollection = System.currentTimeMillis() - tiempoInicioCollection;

        long tiempoInicioLista = System.currentTimeMillis();
        this.lista.sort();
        long tiempoLista = System.currentTimeMillis() - tiempoInicioLista;

        int n = this.lista.getCouter() < 100 ? this.lista.getCouter() : 100;
        for (int i = 0; i < n; i++) {
            System.out.println(listaAux.get(i));
        }
        
        JOptionPane.showMessageDialog(this, "Tiempo de ordenado de la Collection: " + tiempoCollection
                + " milisegundos\nTiempo de ordenado de la lista: " + tiempoLista + " milisegundos");
        
        actualizarVista();
    }//GEN-LAST:event_btnOrdenarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnterior;
    private javax.swing.JButton btnCMasivo;
    private javax.swing.JButton btnCalcular;
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnOrdenar;
    private javax.swing.JButton btnPrimero;
    private javax.swing.JButton btnSiguiente;
    private javax.swing.JButton btnUltimo;
    private javax.swing.JButton btnVariable1;
    private javax.swing.JButton btnVariable2;
    private javax.swing.JButton btnVolver;
    private javax.swing.JComboBox<String> cbTipo;
    private com.github.lgooddatepicker.components.DatePicker dpFechaAlta;
    private javax.swing.JLabel lblFechaAlta;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblNumero;
    private javax.swing.JLabel lblSueldo;
    private javax.swing.JLabel lblSueldoMaximo;
    private javax.swing.JLabel lblTipo;
    private javax.swing.JLabel lblVariable1;
    private javax.swing.JLabel lblVariable2;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextField txtSueldo;
    private javax.swing.JTextField txtSueldoMaximo;
    private javax.swing.JTextField txtVariable1;
    private javax.swing.JTextField txtVariable2;
    // End of variables declaration//GEN-END:variables
}
